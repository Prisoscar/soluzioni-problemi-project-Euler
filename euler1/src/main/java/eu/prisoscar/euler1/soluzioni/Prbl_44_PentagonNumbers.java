package eu.prisoscar.euler1.soluzioni;

import eu.prisoscar.euler1.algoritmi_trasversali.NumberSequences;

import java.util.List;

/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised;
what is the value of D?
 */
public class Prbl_44_PentagonNumbers {

    private static final int SUPPOSED_TARGET = 5_000;

    public static long getSolution(){
        long solution = Integer.MAX_VALUE;
        List<Long> pentagonNumbers = NumberSequences.pentagonalNumbersSequence(SUPPOSED_TARGET);
        for (int i =  0; i < pentagonNumbers.size(); i++){
            for (int j = i + 1; j < pentagonNumbers.size(); j++) {
                if (pentagonNumbers.contains(pentagonNumbers.get(j) - pentagonNumbers.get(i))
                        && pentagonNumbers.contains(pentagonNumbers.get(j) + pentagonNumbers.get(i))
                        && pentagonNumbers.get(j) - pentagonNumbers.get(i) < solution) {
                    solution = pentagonNumbers.get(j) - pentagonNumbers.get(i);
                }
            }
        }
        return solution;
    }
}
